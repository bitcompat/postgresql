From be307abe44050e7b89877a534d5b7684e2266e1c Mon Sep 17 00:00:00 2001
From: Francisco Miguel Biete Banon <francisco.banon@optum.com>
Date: Fri, 21 Oct 2022 13:54:36 +0100
Subject: [PATCH] Support PostgreSQL v15

String is a PostgreSQL type, rename pljava String to PLJString
---
 pljava-so/src/main/c/type/String.c              | 16 ++++++++--------
 pljava-so/src/main/include/pljava/type/String.h |  8 ++++----
 2 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/pljava-so/src/main/c/type/String.c b/pljava-so/src/main/c/type/String.c
index 4b58f622..01e2a18b 100644
--- a/pljava-so/src/main/c/type/String.c
+++ b/pljava-so/src/main/c/type/String.c
@@ -59,9 +59,9 @@ jvalue _String_coerceDatum(Type self, Datum arg)
 {
 	jvalue result;
 	char* tmp = DatumGetCString(FunctionCall3(
-					&((String)self)->textOutput,
+					&((PLJString)self)->textOutput,
 					arg,
-					ObjectIdGetDatum(((String)self)->elementType),
+					ObjectIdGetDatum(((PLJString)self)->elementType),
 					Int32GetDatum(-1)));
 	result.l = String_createJavaStringFromNTS(tmp);
 	pfree(tmp);
@@ -83,19 +83,19 @@ Datum _String_coerceObject(Type self, jobject jstr)
 	JNI_deleteLocalRef(jstr);
 
 	ret = FunctionCall3(
-					&((String)self)->textInput,
+					&((PLJString)self)->textInput,
 					CStringGetDatum(tmp),
-					ObjectIdGetDatum(((String)self)->elementType),
+					ObjectIdGetDatum(((PLJString)self)->elementType),
 					Int32GetDatum(-1));
 	pfree(tmp);
 	return ret;
 }
 
-static String String_create(TypeClass cls, Oid typeId)
+static PLJString String_create(TypeClass cls, Oid typeId)
 {
 	HeapTuple    typeTup = PgObject_getValidTuple(TYPEOID, typeId, "type");
 	Form_pg_type pgType  = (Form_pg_type)GETSTRUCT(typeTup);
-	String self = (String)TypeClass_allocInstance(cls, typeId);
+	PLJString self = (PLJString)TypeClass_allocInstance(cls, typeId);
 	MemoryContext ctx = GetMemoryChunkContext(self);
 	fmgr_info_cxt(pgType->typoutput, &self->textOutput, ctx);
 	fmgr_info_cxt(pgType->typinput,  &self->textInput,  ctx);
@@ -109,7 +109,7 @@ Type String_obtain(Oid typeId)
 	return (Type)StringClass_obtain(s_StringClass, typeId);
 }
 
-String StringClass_obtain(TypeClass self, Oid typeId)
+PLJString StringClass_obtain(TypeClass self, Oid typeId)
 {
 	return String_create(self, typeId);
 }
@@ -126,7 +126,7 @@ jstring String_createJavaString(text* t)
 		Size srcLen = VARSIZE(t) - VARHDRSZ;
 		if(srcLen == 0)
 			return s_the_empty_string;
-	
+
 		if ( s_two_step_conversion )
 		{
 			utf8 = (char*)pg_do_encoding_conversion((unsigned char*)src,
diff --git a/pljava-so/src/main/include/pljava/type/String.h b/pljava-so/src/main/include/pljava/type/String.h
index 6abf0752..a03f915d 100644
--- a/pljava-so/src/main/include/pljava/type/String.h
+++ b/pljava-so/src/main/include/pljava/type/String.h
@@ -19,9 +19,9 @@ extern "C" {
  * The String class extends the Type and adds the members necessary to
  * perform standard Postgres textin/textout conversion. An instance of this
  * class will be used for all types that are not explicitly mapped.
- * 
+ *
  * The class also has some convenience routings for Java String manipulation.
- * 
+ *
  * @author Thomas Hallgren
  *
  **************************************************************************/
@@ -29,7 +29,7 @@ extern "C" {
 extern jclass s_Object_class;
 extern jclass s_String_class;
 struct String_;
-typedef struct String_* String;
+typedef struct String_* PLJString;
 
 /*
  * Create a Java String object from a null terminated string. Conversion is
@@ -73,7 +73,7 @@ extern text* String_createText(jstring javaString);
 
 extern Type String_obtain(Oid typeId);
 
-extern String StringClass_obtain(TypeClass self, Oid typeId);
+extern PLJString StringClass_obtain(TypeClass self, Oid typeId);
 
 #ifdef __cplusplus
 }
-- 
2.39.1

